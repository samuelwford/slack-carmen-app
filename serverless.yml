service: slack-sandbox-app

custom:
  tableName: 'carmen-${self:provider.stage}'
  
provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["CarmenDynamoDBTable", "Arn"] }
  environment:
    CARMEN_TABLE: ${self:custom.tableName}
    
functions:
      TOKEN: ${env:${self:provider.stage}_TOKEN}
  carmen:
    handler: handler.carmen
    environment:
      TOKEN: ${env:${self:provider.stage}_TOKEN}
    events:
      - http:
          path: carmen
          method: post
          
resources:
  Resources:
    CarmenDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: user
            AttributeType: S
        KeySchema:
          - AttributeName: user
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
          